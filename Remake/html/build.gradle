
apply plugin: "gwt"
apply plugin: "war"
apply plugin: "jetty"

gwt {
  gwtVersion="$gwtFrameworkVersion" // Should match the gwt version used for building the gwt backend
  maxHeapSize="1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
  minHeapSize="1G"

  src = files(file('src/main/java')) // Needs to be in front of "modules" below.
  modules 'com.squidpony.assaultfish.GdxDefinition'
  devModules 'com.squidpony.assaultfish.GdxDefinitionSuperdev'
  project.webAppDirName = 'webapp'

  compiler.strict = true
  compiler.disableCastChecking = true
}

dependencies {
  compile project(':core')
  compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
  compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
  compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
  compile "com.github.SquidPony.SquidLib:squidlib:$squidLibVersion:sources"
  compile "com.github.SquidPony.SquidLib:squidlib-util:$squidLibUtilVersion:sources"
  compile "com.github.tommyettinger:regexodus:$regExodusVersion:sources"

}

task draftRun(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war')
    webApp=draftWar.archivePath
    daemon=true
}

task superDev(type: de.richsource.gradle.plugins.gwt.GwtSuperDev) {
    dependsOn draftRun
    doFirst {
        gwt.modules = gwt.devModules
    }
}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
        }
        copy {
            from "war"
            into "build/dist"
        }
    }
}

draftWar {
    from "war"
}

task addSource {
  doLast {
    sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)

  }
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/main/java/" ]

eclipse.project {
    name = appName + "-html"
}